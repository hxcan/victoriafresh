buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version="2020.7.28"

dependencies {
//    api 'com.google.protobuf:protobuf-java:3.11.4'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'com.upokecenter:cbor:4.2.0'

}

android {
    compileSdkVersion 29

    resourcePrefix "stupidbeauty__"

    defaultConfig {

        minSdkVersion 9
        targetSdkVersion 29
        versionCode 194
        versionName version
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['/src', 'src', 'java']
            aidl.srcDirs = ['/src', 'src', 'aidl']
            res.srcDirs = ['/res', 'res']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
       }
    }

    lintOptions {
        abortOnError false
    }
}

def siteUrl='http://stupidbeauty.com/Blog/'
def hgUrl='https://bitbucket.org/hxcan/victoriafresh'
group="com.stupidbeauty"

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'victoriafresh'
                url siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'hxcan'
                        name 'Hxcan Cai'
                        email 'caihuosheng@gmail.com'
                    }
                }

                scm {
                    connection hgUrl
                    developerConnection hgUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier='sources'
}

task javadoc(type: Javadoc) {
    source=android.sourceSets.main.java.srcDirs
    classpath+=project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier='javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties=new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user=properties.getProperty("bintray.user")
    key=properties.getProperty("bintray.apikey")
    configurations=['archives']
    pkg {
        repo="maven"
        name="victoriafresh"
        websiteUrl=siteUrl
        vcsUrl=hgUrl
        licenses=["Apache-2.0"]
        publish=true
    }
}